#For now, we are going to try and replicate just the 3.6 python tasks, 
#and just in order. Will go back and add matrixing later.
jobs:
- job: PythonBuildOnLinux
  pool:
    vmImage: 'ubuntu-16.04'
  strategy:
    maxParallel: 2
    matrix:
      Python36:
        python.version: '3.6'

  variables:
    TRAVIS_EVENT_TYPE: $(setvarStep.TRAVIS_EVENT_TYPE)
    TRAVIS_REPO_SLUG: $(setvarStep.TRAVIS_REPO_SLUG)
    TOXENV: $(setvarStep.TOXENV)

  steps:
  #Create environment variables to replicate the Travis variables, so we don't have to change scripts
  - powershell: |
      if ("$(Build.Reason)" -eq "PullRequest") 
      {
          echo "##vso[task.setvariable variable=TRAVIS_EVENT_TYPE;isOutput=true]pull_request"
      }
      else
      {
          echo "##vso[task.setvariable variable=TRAVIS_EVENT_TYPE;isOutput=true]$(Build.Reason)"
      }
      echo "##vso[task.setvariable variable=TRAVIS_REPO_SLUG;isOutput=true]$(Build.Repository.Name)"
      echo "##vso[task.setvariable variable=TOXENV;isOutput=true]py36"
    name: setvarStep
    displayName: 'Replicate Travis Environment Variables'
    
  #Do a pip install to replicate what Travis does when you specify python as language
  - script: pip install -r requirements.txt
    displayName: 'pip install -r requirements.txt'

  #Specify the Python Version to use.
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'
    displayName: 'Set Python version to use to $(python.version)'

  # Install the package dependencies
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: 'sudo apt-get install libssl-dev libffi-dev python-dev'
    displayName: 'Install libssl-dev, libffi-dev, and python-dev dependencies'

  #Upgrade pip
  - script: 'python -m pip install --upgrade pip setuptools'
    displayName: 'Upgrade pip setup tools'

  #Install tox
  - script: 'pip install tox'
    displayName: 'Install tox'

  #Install wheel
  - script: 'pip install wheel'
    displayName: 'pip install wheel'

  #Precheck Stages
  # Commenting out to test things 
  - script: './scripts/ci/precheck_pep8.sh'
    displayName: "Precheck PURPOSE='PEP8"
    workingDirectory: './'
  - script: './scripts/ci/precheck_header.sh'
    displayName: "Precheck PURPOSE='Headers"
    workingDirectory: './'
  - script: './scripts/dependency/check.sh'
    displayName: "Precheck PURPOSE='Dependency Check"
    workingDirectory: './'

  #UnitTest Stage
  #Had to create the TOXENV variable. So we will have to figure out how to
  #parallelize that. For now we move forward with 3.6
  - script: './scripts/ci/unittest.sh'
    displayName: "UnitTests TOXENV=py36"
    workingDirectory: './'

  #Verify Stage
  #This stage is also going to need environment variables
  - script: './scripts/ci/verify_linter.sh'
    displayName: "Verify PURPOSE='Lint Command Table and Help'"
    workingDirectory: './'
